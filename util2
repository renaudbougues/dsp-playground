from scipy.fftpack import fft
import numpy as np
from fractions import gcd

def minimizeEnergySpreadDFT(x, fs, f1, f2):
    """
    Inputs:
        x (numpy array) = input signal 
        fs (float) = sampling frequency in Hz
        f1 (float) = frequency of the first sinusoid component in Hz
        f2 (float) = frequency of the second sinusoid component in Hz
    Output:
        The positive half of the DFT spectrum (in dB) of the M sample segment of x. 
                           mX is (M/2)+1 samples long (M is to be computed)
    """
    n1 = fs/f1
    n2 = fs/f2
    M = n1*n2 / gcd(n1,n2)
    
    X = fft(x, M)
    XdB = 20 * np.log10(np.absolute(X))
    mx = XdB[:(M/2)+1]
    return mx
